package com.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import com.dto.BoardVO;
import util.DBManager;

public class BoardDAO {
	private BoardDAO() {
	}

	private static BoardDAO instance = new BoardDAO();

	public static BoardDAO getInstance() {
		return instance;
	}

	// 최근 등록한 게시글이 먼저 나오도록 게시글 목록을 출력한다.  / get
	public List<BoardVO> selectAllBoards() {
		String sql = "select * from board order by num desc";
		List<BoardVO> list = new ArrayList<BoardVO>();
		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;
		try {
			conn = DBManager.getConnection();
			stmt = conn.createStatement();
			rs = stmt.executeQuery(sql);
			while (rs.next()) {
				BoardVO bVo = new BoardVO();
				bVo.setNum(rs.getInt("num"));
				bVo.setUsername(rs.getString("username"));
				bVo.setEmail(rs.getString("email"));
				bVo.setPass(rs.getString("pass"));
				bVo.setTitle(rs.getString("title"));
				bVo.setContent(rs.getString("content"));
				bVo.setReadcount(rs.getInt("readcount"));
				bVo.setWritedate(rs.getTimestamp("writedate"));
				list.add(bVo);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			DBManager.close(conn, stmt, rs);
		}
		return list;
	}
	
	
    public void insertBoard(BoardVO bVo) {
String sql = "insert into board(username, email, pass, title, content) values(?, ?, ?, ?, ?)";
    Connection conn = null;
    PreparedStatement pstmt = null;
    try {
        conn = DBManager.getConnection();
        pstmt = conn.prepareStatement(sql);
        pstmt.setString(1, bVo.getUsername());
        pstmt.setString(2, bVo.getEmail());
        pstmt.setString(3, bVo.getPass());
        pstmt.setString(4, bVo.getTitle());
        pstmt.setString(5, bVo.getContent());
        pstmt.executeUpdate();
    } catch (SQLException e) {
        e.printStackTrace(); // 또는 로깅 프레임워크를 사용하여 로그에 기록
        throw new RuntimeException("글 작성 중에 오류가 발생했습니다.", e);
    } finally {
        DBManager.close(conn, pstmt);
    }
}


}
